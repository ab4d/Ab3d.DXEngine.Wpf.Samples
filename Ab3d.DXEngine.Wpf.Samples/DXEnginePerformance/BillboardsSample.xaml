<Page x:Class="Ab3d.DXEngine.Wpf.Samples.DXEnginePerformance.BillboardsSample"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:cameras="clr-namespace:Ab3d.Cameras;assembly=Ab3d.PowerToys"
      xmlns:ab3d="clr-namespace:Ab3d.Controls;assembly=Ab3d.PowerToys"  
      xmlns:visuals="clr-namespace:Ab3d.Visuals;assembly=Ab3d.PowerToys"   
      xmlns:dxControls="clr-namespace:Ab3d.DirectX.Controls;assembly=Ab3d.DXEngine.Wpf"
      Title="InstancedMeshGeometry3DTest"
      mc:Ignorable="d" 
      d:DesignHeight="400" d:DesignWidth="800">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0" FontWeight="Bold" FontSize="18" Foreground="#333" Margin="5 0 5 4" TextWrapping="Wrap"
                   Text="Billboards (rendering many textures that face the camera)"/>

        <Rectangle Grid.Row="0" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Height="2" Fill="#333333" SnapsToDevicePixels="True" />

        <!-- This sample is using PresentationType set to DirectXOverlay. 
             This can greatly improve performance of rendering because graphic card can render in the background. 
             With DirectXImage, the CPU needs to wait until graphics card finishes rendering and then can send the rendered image to the WPF composition engine. 
             A drawback of DirectXOverlay is that no WPF object can be drawn over 3D scene. -->
        <dxControls:DXViewportView Name="MainDXViewportView" Grid.Row="1" PresentationType="DirectXOverlay" BackgroundColor="White">
            <Viewport3D Name="MainViewport">
                <visuals:HeightMapVisual3D x:Name="HeightMap1" Material="Silver" BackMaterial="Gray" Size="100 30 100"
                                           IsWireframeShown="False"
                                           IsSolidSurfaceShown="True"/>
                <ModelVisual3D>
                    <ModelVisual3D.Content>
                        <Model3DGroup>
                            <Model3DGroup.Children>
                                <AmbientLight Color="#444" />
                                <DirectionalLight Direction="-1, -0.6, 0" />
                            </Model3DGroup.Children>
                        </Model3DGroup>
                    </ModelVisual3D.Content>
                </ModelVisual3D>
            </Viewport3D>
        </dxControls:DXViewportView>

        <cameras:TargetPositionCamera Name="Camera1" Grid.Row="1"
                                      Heading="-5" Attitude="-20" Bank="0" Distance="120" 
                                      TargetPosition="0 10 -10"
                                      ShowCameraLight="Never"
                                      TargetViewport3D="{Binding ElementName=MainViewport}"/>

        <!-- EventsSourceElement is set to MainDXViewportView - this means that the MainDXViewportView's mouse events are subscribed to - this enables camera rotation without the need to be over the rendered 3D element -->
        <ab3d:MouseCameraController Name="MouseCameraController1" Grid.Row="1"
                                    RotateCameraConditions="LeftMouseButtonPressed"
                                    MoveCameraConditions="LeftMouseButtonPressed, ControlKey"
                                    EventsSourceElement="{Binding ElementName=MainDXViewportView}"
                                    TargetCamera="{Binding ElementName=Camera1}"/>

        <Rectangle Grid.Row="2" VerticalAlignment="Top" HorizontalAlignment="Stretch" Height="2" Fill="#333333" SnapsToDevicePixels="True" />
        <WrapPanel Grid.Row="2" Margin="0 7 10 5" Orientation="Horizontal">
            <TextBlock Text="Trees count:" FontWeight="Bold" VerticalAlignment="Center" Margin="0 0 3 0"/>
            <ComboBox Name="TreesCountComboBox" SelectedIndex="3" Margin="0 0 30 0" Width="80" SelectionChanged="TreesCountComboBox_OnSelectionChanged">
                <ComboBoxItem>1,000</ComboBoxItem>
                <ComboBoxItem>5,000</ComboBoxItem>
                <ComboBoxItem>10,000</ComboBoxItem>
                <ComboBoxItem>15,000</ComboBoxItem>
                <ComboBoxItem>20,000</ComboBoxItem>
                <ComboBoxItem>50,000</ComboBoxItem>
                <ComboBoxItem>100,000</ComboBoxItem>
                <ComboBoxItem>500,000</ComboBoxItem>
            </ComboBox>

            <CheckBox Name="FixUpVectorCheckBox" Content="Fix up vector to (0, 1, 0)" IsChecked="False" FontWeight="Bold" VerticalAlignment="Center" Margin="10 0 0 0" 
                      Checked="OnFixUpVectorCheckedChanged" Unchecked="OnFixUpVectorCheckedChanged" />
        </WrapPanel>

        <Button Name="HideShowButton" Grid.Row="2" Content="Hide trees at higher altitude" VerticalAlignment="Center" HorizontalAlignment="Right" Padding="8 3" Click="HideShowButton_OnClick"
                ToolTip="This button shows how to quickly hide and show some of the billboards"/>
    </Grid>
</Page>
